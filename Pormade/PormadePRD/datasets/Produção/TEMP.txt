var gDataCorte = '2023-01-01';

function defineStructure() {
    addColumn('status');
}

function onSync(lastSyncDate) {
    printLog("info", "## Sync Tracking START ##");
    var newDataset = DatasetBuilder.newDataset();
    newDataset.addColumn('status');
    var wToken = '';

    try {
        var wToken = f_getToken();
        if (wToken != null) {
            f_postInstalacoes(wToken, newDataset);

            f_getInstalacoes(wToken, newDataset);

            f_loadInstalacoes(wToken, newDataset);
            f_updateInstalacoes(wToken, newDataset);
        }
    } catch (error) {
        // printLog("erro", "Error SQL: " + error.toString());
        newDataset.addRow(new Array(error.toString() + " linha: " + error.lineNumber));
    }

    return newDataset;
}

function createDataset(fields, constraints, sortFields) {
    printLog("info", "## Sync Tracking START ##");
    var newDataset = DatasetBuilder.newDataset();
    newDataset.addColumn('status');
    var wToken = '';

    try {
        var wToken = f_getToken();
        if (wToken != null) {
            // f_postInstalacoes(wToken, newDataset);
            f_loadInstalacoes(wToken, newDataset);

            // f_getInstalacoes(wToken, newDataset);
        }
    } catch (error) {
        // printLog("erro", "Error SQL: " + error.toString());
        newDataset.addRow(new Array(error.toString() + " linha: " + error.lineNumber));
    }

    return newDataset;
}

function onMobileSync(user) {

}

function f_postInstalacoes(wToken, pDataset) {

    // ################### Envia os Eventos #########################

    var arrInstalacoes = [];
    var connectionWD = null;
    var statementWD = null;
    var rsWD = null;
    var rsWD2 = null;
    var contextWD = new javax.naming.InitialContext();
    var dataSourceWD = contextWD.lookup("java:/jdbc/CRMDS");
    connectionWD = dataSourceWD.getConnection();
    var gson = new com.google.gson.Gson();

    // printLog("info", "End Point Instalacaoes: ");
    // pDataset.addRow(new Array("Enviando Instalacaoes:"));
    var arrInstalacoes = [];
    var sql = "select ";
    sql += "    kbt.id, ";
    sql += "    kbt.datregistro, ";
    sql += "    CONCAT(pr.nr_proposta, '-', pr.nr_versao) as proposta, ";
    sql += "    pr.id as idProposta, ";
    sql += "    kbt.seq_proposta as seqProposta, ";
    sql += "    p.nome_razao, ";
    sql += "    kbt.num_telefone, ";
    sql += "    CONCAT(pEnd.logradouro, ', ', pEnd.numero) as endereco, ";
    sql += "    pEnd.bairro, ";
    sql += "    pEnd.cep, ";
    sql += "    kbt.cidade, ";
    sql += "    kbt.uf, ";
    sql += "    pInstador.cnpj_cpf as instalador, ";
    sql += "    kbt.datagendaini,  ";
    sql += "    kbtS.id as idSituacao  ";
    sql += "from kbt_t_instalacoes kbt  ";
    sql += "    inner join kbt_t_instalacoes_status kbtS on (kbtS.id = kbt.id_status)   ";
    sql += "    inner join pon_proposta pr on(pr.id = kbt.idproposta)   ";
    sql += "    inner join pon_pessoa_cliente pc on(pc.id = pr.id_cliente)   ";
    sql += "    inner join pon_pessoa p on(p.id = pc.id_pessoa)    ";
    sql += "    inner join pon_pessoa_arquiteto pIns on(pIns.id = kbt.idinstalador)  ";
    sql += "    inner join pon_pessoa pInstador on(pInstador.id = pIns.id_pessoa) ";
    sql += "    inner join pon_pessoa_endereco pEnd on(pEnd.id_pessoa = pc.id_pessoa) ";
    sql += "    and(pEnd.principal = true) ";
    sql += "where kbtS.indsinc = 'S' ";
    sql += "  and kbt.ind_sync = 'S'";
    // sql += " and kbt.id = 365";
    statementWD = connectionWD.prepareStatement(sql);
    var rsWD = statementWD.executeQuery();

    while (rsWD.next()) {

        var arrInstalacoesItens = [];
        var SQL = "select pI.idseq, pi.idproduto, pI.descricao, pi.local ";
        SQL += "from kbt_t_instalacoes_itens pI  ";
        SQL += "where pi.idproposta = " + rsWD.getString("idProposta");
        statementWD = connectionWD.prepareStatement(SQL);
        var rsWD2 = statementWD.executeQuery();
        while (rsWD2.next()) {

            var dados = {
                SEQ: rsWD2.getString("idseq") + '@' + rsWD2.getString("idproduto"),
                DESCRICAO: rsWD2.getString("descricao") + " - " + rsWD2.getString("local") + ""
            }
            arrInstalacoesItens.push(dados)
        }


        var dados = {
            INDACAO: (rsWD.getString("idSituacao") == '11' ? 'D' : 'A'),
            IDINT: parseInt(rsWD.getString("id")),
            DATREGISTRO: rsWD.getString("datregistro") + "",
            PROPOSTA: rsWD.getString("proposta") + "",
            IDPROPOSTA: rsWD.getString("idProposta") + "",
            SEQINSTALL: rsWD.getString("seqProposta") + "",
            CLIENTE: rsWD.getString("nome_razao") + "",
            NUMTELEFONE: rsWD.getString("num_telefone") + "",
            ENDERECO: rsWD.getString("endereco") + "",
            BAIRRO: rsWD.getString("bairro") + "",
            CEP: rsWD.getString("cep") + "",
            CIDADE: rsWD.getString("cidade") + "",
            UF: rsWD.getString("uf") + "",
            INSTALADOR: rsWD.getString("instalador") + "",
            DATATRIBUIDO: rsWD.getString("datagendaini") + "",
            DATAGENDA: rsWD.getString("datagendaini") + "",
            SERVICOS: arrInstalacoesItens
        }
        arrInstalacoes.push(dados);

    }

    printLog("info", "JSON Inst: " + gson.toJson(arrInstalacoes));

    var endpoint = "/instalacao";
    if (arrInstalacoes.length > 0) {
        var instalacao = f_atualizarRegistro(endpoint, wToken, arrInstalacoes)

        if (instalacao != null) {
            if (instalacao.status == true) {
                printLog("erro", "JSON Retorno:" + gson.toJson(instalacao.data));

                for (var i = 0; i < instalacao.data.length; i++) {
                    var SQLINS = "update kbt_t_instalacoes set ind_sync = null ";
                    // SQLINS += instalacao.data[i].ACAO != "DEL" ? ", id_status = 10 " : "";
                    SQLINS += "where id = " + instalacao.data[i].IDINT;
                    var statementWD = connectionWD.prepareStatement(SQLINS);
                    statementWD.executeUpdate();
                }
            }
            pDataset.addRow(new Array("instalações Enviados"));
        }
    }


    if (rsWD2 != null) rsWD2.close();
    if (rsWD != null) rsWD.close();
    if (statementWD != null) statementWD.close();
    if (connectionWD != null) connectionWD.close();
    // ################### Envia os Eventos #########################
}

var debug = true;
function printLog(tipo, msg) {

    if (debug) {
        var msgs = getValue("WKDef") + " - " + getValue("WKNumProces") + " - " + msg
        if (tipo == 'info') {
            log.info(msgs);
        } else if (tipo == 'error') {
            log.error(msgs);
        } else if (tipo == 'fatal') {
            log.fatal(msgs);
        } else {
            log.warn(msgs);
        }
    }
}

function f_updateInstalacoes(wToken, pDataset) {
    try {
        var arrInstaladores = [];
        var connectionWD = null;
        var statementWD = null;
        var rsWD = null;
        var rsWD2 = null;
        var contextWD = new javax.naming.InitialContext();
        var dataSourceWD = contextWD.lookup("java:/jdbc/CRMDS");
        connectionWD = dataSourceWD.getConnection();
        var gson = new com.google.gson.Gson();


        var SQL = "select id, idproposta from kbt_t_instalacoes where id_status = (select id from kbt_t_instalacoes_status where ordem = 1)";
        statementWD = connectionWD.prepareStatement(SQL);
        rsWD = statementWD.executeQuery();

        var wNumReg = 0;
        var wNumRegUP = 0;

        while (rsWD.next()) {
            try {
                wNumReg++;
                var wAchouProp = false;

                var SQLProp = "select dt_envio_producao from pon_proposta where id = " + rsWD.getString("idproposta")
                statementWD = connectionWD.prepareStatement(SQLProp);
                rsWD2 = statementWD.executeQuery();

                while (rsWD2.next()) {
                    if ((rsWD2.getString("dt_envio_producao") != null && rsWD2.getString("dt_envio_producao") != 'null')) {
                        wAchouProp = true;
                    }
                }

                if (wAchouProp) {
                    wNumRegUP++
                    var SQLINS = "update kbt_t_instalacoes set id_status = 6 where id = " + rsWD.getString("id");
                    statementWD = connectionWD.prepareStatement(SQLINS);
                    statementWD.executeUpdate();
                }

            } catch (error) {
                pDataset.addRow(new Array("Erro Update Instalacao: " + error.toString() + " linha: " + error.lineNumber));
                continue;

            }

        }

        pDataset.addRow(new Array("Registros processados: " + wNumReg + ' Registros UP: ' + wNumRegUP));

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadInstalacao: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD2 != null) rsWD2.close();
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();
        if (connectionWD != null) connectionWD.close();
    }
}


function f_getInstalacoes(pToken, pDataset) {
    try {

        var connectionWD = null;
        var statementWD = null;
        var rsWD = null;
        var contextWD = new javax.naming.InitialContext();
        var dataSourceWD = contextWD.lookup("java:/jdbc/CRMDS");
        connectionWD = dataSourceWD.getConnection();
        var gson = new com.google.gson.Gson();

        var sql = "select kbt.id, kbt.idproposta, kbt.seq_proposta as seqProposta, CONCAT(pr.nr_proposta, '-', pr.nr_versao) as proposta, kbt.nom_responsavel, kbt.num_telefone ";
        sql += "from kbt_t_instalacoes kbt ";
        sql += "    inner join kbt_t_instalacoes_status kbtS on (kbtS.id = kbt.id_status)   ";
        sql += "    inner join pon_proposta pr on(pr.id = kbt.idproposta)  ";
        sql += "where kbtS.indsinc = 'S' ";
        sql += "  and (kbt.ind_sync is null) ";
        // sql += "  and pr.nr_proposta = '323231' ";

        statementWD = connectionWD.prepareStatement(sql);
        var rsWD = statementWD.executeQuery();

        while (rsWD.next()) {

            // pDataset.addRow(new Array("ID Proposta: " + rsWD.getString("idproposta")));

            var endpoint = '/listainstalacao?proposta=' + rsWD.getString("idproposta") + "&seqinstall=" + rsWD.getString("seqProposta");
            // pDataset.addRow(new Array("End Point " + endpoint));
            var wObj = f_atualizarRegistro(endpoint.replace(/'/g, ''), pToken, "");
            // pDataset.addRow(new Array("JSON " + gson.toJson(wObj)));
            if (wObj != null) {

                var wNumTelefone = (rsWD.getString("num_telefone").substring(0, 2) != "55" ? '55' + justNumbers(rsWD.getString("num_telefone")) : justNumbers(rsWD.getString("num_telefone")));
                for (var x = 0; x < wObj.length; x++) {
                    // pDataset.addRow(new Array("Telefone: " + wNumTelefone + " Situacao: " + wObj[x].INDSITUACAO));
                    if (wObj[x].STATUS == 'OK') {

                        for (var k = 0; k < wObj[x].SERVICOS.length; k++) {
                            if (wObj[x].SERVICOS[k].SITUACAO == 'F') {
                                var wItem = wObj[x].SERVICOS[k].IDSEQ.split("@");

                                var SQLINS = "update kbt_t_instalacoes_itens set ind_situacao = 'F' where idinstalacao = " + rsWD.getString("id") + " and seqinstall = " + rsWD.getString("seqProposta") + " and idseq = " + wItem[0] + " and idproduto = " + wItem[1];
                                var statementWD = connectionWD.prepareStatement(SQLINS);
                                statementWD.executeUpdate();
                            }

                        }

                        if (wObj[x].INDSITUACAO == 'F') {
                            // pDataset.addRow(new Array("End Point " + gson.toJson(wObj)));
                            var wToken = makeid(4);
                            // var widInstalacao = rsWD.getString("idproposta") + '||' + rsWD.getString("seqProposta")
                            // var widInstalacao = pad(rsWD.getString("seqProposta"), 2) + rsWD.getString("idproposta")
                            var widInstalacao = rsWD.getString("id")
                            var widInstalacao64 = java.util.Base64.getEncoder().encodeToString(widInstalacao.getBytes());
                            var SQLINS = "update kbt_t_instalacoes set id_status = 3, token = '" + wToken + "', data_fim_instalacao = current_date where id = " + rsWD.getString("id");
                            var statementWD = connectionWD.prepareStatement(SQLINS);
                            statementWD.executeUpdate();



                            // pDataset.addRow(new Array("SQL " + SQLINS));
                            var ct = new Array();
                            ct.push(DatasetFactory.createConstraint('endpoint', 'mensagem', null, ConstraintType.MUST));
                            ct.push(DatasetFactory.createConstraint('codMensagem', '5', '5', ConstraintType.MUST));
                            ct.push(DatasetFactory.createConstraint('num_destinatario', wNumTelefone, wNumTelefone, ConstraintType.MUST));
                            ct.push(DatasetFactory.createConstraint('link', 'https://fluig.pormade.com.br:8443/portal/1/wdk_confirmacao_instalador/' + widInstalacao64, 'https://fluig.pormade.com.br:8443/portal/1/wdk_confirmacao_instalador/' + widInstalacao64, ConstraintType.MUST));
                            ct.push(DatasetFactory.createConstraint('token', wToken, wToken, ConstraintType.MUST));
                            ct.push(DatasetFactory.createConstraint('telefone', '0800-642-3521', '0800-642-3521', ConstraintType.MUST));
                            var ds = DatasetFactory.getDataset('dsk_fortics', null, ct, null);
                            if ((ds != null) && (ds.rowsCount > 0)) {
                                if (ds.rowsCount > 0) {
                                    if (ds.getValue(0, "STATUS") == true) {
                                        var SQLINS = "insert into kbt_t_instalacoes_whats ( id, idinstalacao, dataregistro, numtelefone, idmensagem)  values ";
                                        SQLINS += "((select COALESCE(max(id) +1 ,1) from kbt_t_instalacoes_whats), " + widInstalacao + ",CURRENT_DATE,'" + rsWD.getString("num_telefone") + "','" + ds.getValue(0, "ID") + "')";
                                        var statementWD = connectionWD.prepareStatement(SQLINS);
                                        statementWD.executeUpdate();

                                        // pDataset.addRow(new Array("Enviou a mensagem, ID: " + ds.getValue(0, "ID")));
                                    } else {
                                        pDataset.addRow(new Array("Não enviou, Error: " + ds.getValue(0, "MENSAGEM")));
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        pDataset.addRow(new Array("Carregando informações das Instalações "));
    } catch (error) {
        pDataset.addRow(new Array(error.toString() + " linha: " + error.lineNumber));

    } finally {
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();
        if (connectionWD != null) connectionWD.close();
    }
}

function f_atualizarRegistro(PendPoint, Ptoken, jsonFile, pIndServico) {

    var retorno = null;
    var metodo = "GET";
    var wServiceCode = "tracking";
    var gson = new com.google.gson.Gson();

    if (pIndServico != undefined) {
        wServiceCode = "trackingTESTE"
    }

    if (jsonFile != "") {
        metodo = "POST";
        var params = {
            json: gson.toJson(jsonFile)
        };
    }

    var clientService = fluigAPI.getAuthorizeClientService();
    var data = {
        companyId: getValue("WKCompany") + "",
        serviceCode: wServiceCode,
        endpoint: PendPoint,
        timeoutService: "240",
        method: metodo,
    };

    // var params;
    var headers = {};
    headers["x-access-token"] = Ptoken;
    headers["Content-Type"] = "application/json";
    data["headers"] = headers;
    data["params"] = params;

    var jj = gson.toJson(data);
    var vo = clientService.invoke(jj);
    if (vo.getResult() == "" || vo.getResult().isEmpty()) {
        throw "Retorno esta vazio";
    } else {
        var jr = JSON.parse(vo.getResult());
        retorno = jr;
    }

    return retorno;


}

function justNumbers(text) {
    var numbers = text.replaceAll("[^0-9]", "")
    return parseInt(numbers);
}

function makeid(length) {
    var result = '';
    // var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var characters = '0123456789';
    var charactersLength = characters.length;
    for (var i = 0; i < length; i++) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
}


function f_getToken() {

    var retorno = null;
    var params = {
        login: "02925364969",
        senha: "123",
        datRemoto: "",
        horRemoto: ""
    };

    var endpoint = "/login"; // endPoint pra buscar o Token

    try {
        var clientService = fluigAPI.getAuthorizeClientService();
        var data = {
            companyId: getValue("WKCompany") + "",
            serviceCode: "tracking",
            endpoint: endpoint,
            timeoutService: "240",
            method: "POST",
        };

        var headers = {};
        headers["Content-Type"] = "application/json";
        data["headers"] = headers;
        data["params"] = params;

        var jj = JSON.stringify(data);
        var vo = clientService.invoke(jj);
        if (vo.getResult() == "" || vo.getResult().isEmpty()) {
            throw "Retorno esta vazio";
        } else {
            var jr = JSON.parse(vo.getResult());
            if (jr.STATUS == 'OK') {
                retorno = jr.TOKEN;
            }
        }
    } catch (error) {
        // printLog("erro", "Error SQL: " + error.toString());
        newDataset.addRow(new Array(error.toString() + " linha: " + error.lineNumber));
    }

    return retorno;


}

function f_loadInstalacoes(wToken, pDataset) {
    try {
        var arrInstaladores = [];
        var connectionWD = null;
        var statementWD = null;
        var rsWD = null;
        var rsWD2 = null;
        var contextWD = new javax.naming.InitialContext();
        var dataSourceWD = contextWD.lookup("java:/jdbc/CRMDS");
        connectionWD = dataSourceWD.getConnection();
        var gson = new com.google.gson.Gson();


        var SQL = "select distinct pr.id,  pr.nr_proposta, city.uf, REPLACE(city.cidade,'''','') as cidade, pv.equipe " +
            " from pon_proposta pr  " +
            "     inner join pon_pessoa_endereco pEnd on(pEnd.id = pr.id_endereco_entrega)  " +
            "     inner join pon_pessoa_vendedor pv on(pv.id = pr.id_vendedor)  " +
            "     inner join fluig_v_cidade city on(pEnd.cod_uf = city.cod_uf) " +
            "         and(pEnd.cod_cidade = city.cod_cidade_ibge)  " +
            " WHERE pr.instalacao_inclusa = true  " +
            " and pr.dh_emissao >= '" + gDataCorte + "' " +
            " and pr.id_status not in ('1', '2', '3', '14', '21', '22', '25', '26') ";
        // " and pr.id = 224849";
        // "";

        statementWD = connectionWD.prepareStatement(SQL);
        rsWD = statementWD.executeQuery();

        var wNumReg = 0;
        var wNumReg2 = 0;
        var arrProp = [];

        while (rsWD.next()) {
            try {
                wNumReg++;
                var wAchouProp = false;
                // pDataset.addRow(new Array("ID Proposta: " + rsWD.getString("id") + ' - Proposta: ' + rsWD.getString("nr_proposta")));
                var wItensProposta = f_loadItensProposta(pDataset, connectionWD, rsWD.getString("id"));
                if (wItensProposta == 0) {
                    continue;
                }
                var wItensLiberado = f_loadItensLiberado(pDataset, connectionWD, rsWD.getString("id"));


                if (wItensLiberado < wItensProposta) {
                    wNumReg2++;
                    // pDataset.addRow(new Array("ID:" + rsWD.getString("id") + " Proposta: " + rsWD.getString("nr_proposta") + " - Itens P: " + wItensProposta + " - Itens L: " + wItensLiberado));

                    var data = {
                        proposta: rsWD.getString("nr_proposta"),
                        itensProposta: wItensProposta + "",
                        itensPortal: wItensLiberado + ""
                    }
                    arrProp.push(data);

                    var SQLProp = "select 1 achou from kbt_t_instalacoes kbt " +
                        "where kbt.idproposta = " + rsWD.getString("id") +
                        "and not exists(select 1 from kbt_t_instalacoes_itens where idproposta = kbt.idproposta  and seqinstall = kbt.seq_proposta) ";

                    statementWD = connectionWD.prepareStatement(SQLProp);
                    rsWD2 = statementWD.executeQuery();

                    while (rsWD2.next()) {
                        wAchouProp = true;
                    }

                    // pDataset.addRow(new Array("Final wAchouProp:" + wAchouProp));

                    if (!wAchouProp) {
                        var SQLINS = "insert into kbt_t_instalacoes ( id, idproposta, seq_proposta, id_status, cidade, uf, equipe)  values ";
                        SQLINS += "((select COALESCE(max(id) +1 ,1) from kbt_t_instalacoes), " + rsWD.getString("id") + ",(select COALESCE(count(idproposta) +1 ,1) from kbt_t_instalacoes where idproposta = " + rsWD.getString("id") + "),(select id from kbt_t_instalacoes_status where ordem = 1),'" + rsWD.getString("cidade") + "','" + rsWD.getString("uf") + "','" + rsWD.getString("equipe") + "')";
                        // statementWD = connectionWD.prepareStatement(SQLINS);
                        // statementWD.executeUpdate();
                    }
                }
            } catch (error) {
                pDataset.addRow(new Array("Erro LoadInstalacao: " + error.toString() + " linha: " + error.lineNumber));
                continue;

            }

        }

        var wdata = {
            registro: wNumReg2 + "",
            data: arrProp
        }

        printLog("erro", "JSON PROP: " + gson.toJson(wdata));

        pDataset.addRow(new Array("Registros processados: " + wNumReg + ' - Reg fora: ' + wNumReg2));

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadInstalacao: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD2 != null) rsWD2.close();
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();
        if (connectionWD != null) connectionWD.close();
    }
}

function f_loadItensProposta(pDataset, pConnection, pIdProposta) {
    try {
        var wRetItens = 0;
        var wRetItensPortas = 0;
        var wRetItensOutros = 0;

        wRetItensPortas = f_loadItensPropostaProntas(pDataset, pConnection, pIdProposta);
        wRetItensOutros = f_loadItensPropostaoutros(pDataset, pConnection, pIdProposta);

        wRetItens = wRetItensPortas + wRetItensOutros;
        var rsWD = null;
        var statementWD = null;

        var SQL = "select  count(pi.id) as itens " +
            "from pon_proposta_itens pI  " +
            "    inner join pon_proposta_componentes d on(pI.id = d.id_proposta_item) " +
            "    inner join pon_produtos pp on(pp.id = d.id_produto)" +
            "        and(pp.id_produto_tipo in (1, 7, 12, 24, 25, 26, 4, 22)) " +
            "where pi.id_proposta = " + pIdProposta;

        // statementWD = pConnection.prepareStatement(SQL);
        // var rsWD = statementWD.executeQuery();

        // while (rsWD.next()) {
        //     wRetItens = parseInt(rsWD.getString("itens"));
        // }

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadItens: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();

        return wRetItens;
    }
}

function f_loadItensPropostaoutros(pDataset, pConnection, pIdProposta) {
    try {
        var wRetItens = 0;
        var rsWD = null;
        var statementWD = null;

        var SQL = "select " +
            "        count(prod.id_produto_tipo) as itens   " +
            "from pon_produtos prod   " +
            "       left join pon_proposta_componentes comp on(comp.id_produto = prod.id) " +
            "       left join pon_proposta_itens itm on(comp.id_proposta_item = itm.id)  " +
            "       left join pon_proposta prop on(itm.id_proposta = prop.id) " +
            "       left join pon_categoria cat on(prod.id_categoria = cat.id) " +
            "where cat.id not in (5, 6, 8, 9, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55) " +
            "  and prop.id_status in (3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 24, 25, 26) " +
            "  and prop.id = " + pIdProposta +
            "  and itm.id_produto_tipo not in (7,12) ";

        statementWD = pConnection.prepareStatement(SQL);
        var rsWD = statementWD.executeQuery();

        while (rsWD.next()) {
            wRetItens = parseInt(rsWD.getString("itens"));
        }

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadItens: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();
        return wRetItens;
    }
}

function f_loadItensPropostaProntas(pDataset, pConnection, pIdProposta) {
    try {
        var wRetItens = 0;
        var rsWD = null;
        var statementWD = null;

        var SQL = "select " +
            "        count(prod.id_produto_tipo) as itens   " +
            "from pon_produtos prod   " +
            "       left join pon_proposta_componentes comp on(comp.id_produto = prod.id) " +
            "       left join pon_proposta_itens itm on(comp.id_proposta_item = itm.id)  " +
            "       left join pon_proposta prop on(itm.id_proposta = prop.id) " +
            "       left join pon_categoria cat on(prod.id_categoria = cat.id) " +
            "where cat.id not in (5, 6, 8, 9, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55) " +
            "  and prop.id_status in (3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 24, 25, 26) " +
            "  and prop.id = " + pIdProposta +
            "  and itm.id_produto_tipo in (7,12) " +
            "  and prod.id_produto_tipo = 1 ";

        statementWD = pConnection.prepareStatement(SQL);
        var rsWD = statementWD.executeQuery();

        while (rsWD.next()) {
            wRetItens = parseInt(rsWD.getString("itens"));
        }

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadItens: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();
        return wRetItens;
    }
}

function f_loadItensLiberado(pDataset, pConnection, pIdProposta) {
    try {
        var wRetItens = 0;
        var rsWD = null;
        var statementWD = null;

        var SQL = "select count(idseq) as itens " +
            "from kbt_t_instalacoes_itens kbt " +
            "where kbt.idproposta = " + pIdProposta;

        statementWD = pConnection.prepareStatement(SQL);
        var rsWD = statementWD.executeQuery();

        while (rsWD.next()) {
            wRetItens = parseInt(rsWD.getString("itens"));
        }

    } catch (error) {
        pDataset.addRow(new Array("Erro LoadItens: " + error.toString() + " linha: " + error.lineNumber));
    } finally {
        if (rsWD != null) rsWD.close();
        if (statementWD != null) statementWD.close();

        return wRetItens;
    }
}